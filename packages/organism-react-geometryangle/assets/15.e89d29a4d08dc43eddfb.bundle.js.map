{"version":3,"file":"15.e89d29a4d08dc43eddfb.bundle.js","sources":["webpack:///./node_modules/organism-react-ajax/build/es/src/lib/dlog.js"],"sourcesContent":["// dlog 0.1.1\n// http://ddo.github.io/dlog\n// (c) 2014 Ddo <http://ddo.me>\nfunction dlog(opts) {\n  if (!(this instanceof dlog)) {\n    return new dlog(opts);\n  }\n\n  opts = opts ? opts : {}; //default name = DLOG\n\n  this.setName(opts.name); //default level = info\n\n  this.setLevel(opts.level); //default font-size = 14\n\n  this.setSize(opts.size);\n}\n\ndlog.prototype.setName = function (name) {\n  this.name = name ? name : \"DLOG\";\n  return this.name;\n};\n\ndlog.prototype.setLevel = function (level) {\n  this.level = level ? this.level_map[level] ? level : \"info\" : \"info\";\n  this.level_no = this.level_map[this.level];\n  return this.level;\n};\n\ndlog.prototype.setSize = function (size) {\n  this.size = size ? size : 14;\n  return this.size;\n};\n\ndlog.prototype.level_map = {\n  trace: 1,\n  debug: 2,\n  info: 3,\n  warn: 4,\n  error: 5,\n  silent: 6\n};\ndlog.prototype.color_map = {\n  name: \"cyan\",\n  trace: \"black\",\n  debug: \"green\",\n  info: \"blue\",\n  warn: \"orange\",\n  error: \"red\"\n};\n\ndlog.prototype.getCSS = function (level) {\n  if (!this.color_map[level]) {\n    level = \"info\";\n  }\n\n  return level ? \"font-size: \" + this.size + \"px;color: \" + this.color_map[level] : \"font-size: \" + this.size + \"px\";\n};\n\ndlog.prototype.log = function (level, data) {\n  if (level === \"silent\") {\n    return;\n  }\n\n  if (this.level_map[level] >= this.level_no) {\n    this.show(level, data);\n  }\n};\n\ndlog.prototype.isAllObj = function (arr) {\n  //do each element of arr is a obj ?\n  for (var i = 0, j = arr.length; i < j; i++) {\n    if (!isNaN(arr[i] * 1)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\ndlog.prototype.show = function (level, data) {\n  console.info(\"%c [%s] %c %s %c %s:\", this.getCSS(), new Date().toJSON(), this.getCSS(\"name\"), this.name, this.getCSS(level), level.toUpperCase());\n\n  if (!console[level]) {\n    level = \"info\";\n  }\n\n  if (level === \"trace\") {\n    level = \"debug\"; // tricky for hidden trace in browser console.\n  } else if (level === \"debug\") {\n    level = \"log\"; // avoid message hidden when chrome verbose not checked.\n  }\n\n  if (Array.isArray(data[0]) && this.isAllObj(data[0])) {\n    console.table(data[0]);\n  } else {\n    console[level].apply(console, data);\n  }\n};\n\ndlog.prototype.trace = function () {\n  this.log(\"trace\", arguments);\n};\n\ndlog.prototype.debug = function () {\n  this.log(\"debug\", arguments);\n};\n\ndlog.prototype.info = function () {\n  this.log(\"info\", arguments);\n};\n\ndlog.prototype.warn = function () {\n  this.log(\"warn\", arguments);\n};\n\ndlog.prototype.error = function () {\n  this.log(\"error\", arguments);\n};\n\nexport default dlog;"],"mappingssourceRoot":""}